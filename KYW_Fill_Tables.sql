
use KYW2;
call create_zip_codes();
call create_city_names();
call create_county_names();
call create_water_systems();
call create_source_reservoir();
call create_source_treatmentplans();
call create_aggregates();
call create_enforcements();
call create_treatments();
call create_contaminants();
call create_violations();
/*
truncate KYW2.ZIP_CODES;
insert into KYW2.ZIP_CODES (PWSID, ZIP_CODE)
  (select PWSID, ZIP_CODE from kyw0817.ZIP_CODES);
select * from KYW2.ZIP_CODES limit 10;
select count(ID) from KYW2.ZIP_CODES;


truncate KYW2.CITY_NAMES;
insert into KYW2.CITY_NAMES (PWSID, CITY_SERVED)
  (select PWSID, CITY_SERVED from kyw0817.CITY_NAMES);
select * from KYW2.CITY_NAMES limit 10;
select count(ID) from KYW2.CITY_NAMES;

 
truncate KYW2.COUNTY_NAMES;
insert into KYW2.COUNTY_NAMES (PWSID, COUNTY_SERVED)
    (select PWSID, COUNTYSERVED from kyw0817.SDW_COUNTY_SERVED);
select * from KYW2.COUNTY_NAMES limit 10;
select count(ID) from KYW2.COUNTY_NAMES;



truncate  KYW2.CONTAMINANTS ;
INSERT into KYW2.CONTAMINANTS (PWSID, CONTAMINANT, DATE, LEVEL, SIGN, UNITS, CITY)
SELECT
         PWSID,
         CONTAMINANT,
         DATE,
         LEVEL,
         SIGN,
         UNITS,
         CITY
 FROM KYW.CONTAMINANTS;

INSERT INTO KYW2.CONTAMINANTS (PWSID, CONTAMINANT, DATE, LEVEL, SIGN, UNITS, CITY)
SELECT
      lcr_sr.PWSID, lcr_sr.CONTAMINANT_CODE, STR_TO_DATE(lcr.SAMPLING_END_DATE, '%d-%b-%y'), lcr_sr.SAMPLE_MEASURE, lcr_sr.RESULT_SIGN_CODE, lcr_sr.UNIT_OF_MEASURE, ""
FROM kyw0817.LCR_SAMPLE_RESULT as lcr_sr
    INNER JOIN kyw0817.LCR_SAMPLE lcr WHERE lcr.SAMPLE_ID = lcr_sr.SAMPLE_ID AND lcr.PWSID = lcr_sr.PWSID AND lcr_sr.SAMPLE_MEASURE <> 0 AND lcr_sr.PWSID in (Select PWSID FROM kyw0817.GAP)



INSERT into KYW2.CONTAMINANTS (PWSID, CONTAMINANT, DATE, LEVEL, SIGN, UNITS, CITY)
SELECT
	 PWSID,
	 CONTAMINANT,
	 STR_TO_DATE(COLLECTION_DATE, '%m/%d/%Y'),
	 ANALYTICAL_RESULT_VALUE,
	 ANALYTICAL_RESULT_SIGN,
	 "mg/L",
	 ""
 FROM UCMR.UCMR2;
 
 INSERT into KYW2.CONTAMINANTS (PWSID, CONTAMINANT, DATE, LEVEL, SIGN, UNITS, CITY)
 SELECT
 	 PWSID,
 	 CONTAMINANT,
 	 STR_TO_DATE(COLLECTION_DATE, '%m/%d/%Y'),
 	 ANALYTICAL_RESULT_VALUE,
 	 ANALYTICAL_RESULT_SIGN,
 	 "mg/L",
	 ""
 FROM UCMR.UCMR3;
select * from KYW2.CONTAMINANTS limit 10;
select count(ID) from KYW2.CONTAMINANTS;
 
 
 
 
truncate  KYW2.ENFORCEMENTS;
insert into KYW2.ENFORCEMENTS (PWSID,     VIOLATION_ID, ENFORCEMENT_ID, ENFORCEMENT_ACTION_TYPE_CODE, ENFORCEMENT_ACTION_TYPE_CODE_EXPLAIN, ENFORCEMENT_DATE, ORIGINATOR_CODE,    SDWIS_URI, ENFORCEMENT_COMMENT_TEXT )
SELECT                         enf.PWSID, enf.VIOID,    enf.ENFID,      ENFACTIONTYPE,                eatc.VALUE,                           STR_TO_DATE(ENFDATE, '%d-%b-%y'),          ea.ORIGINATOR_CODE, enf.url,   ea.ENFORCEMENT_COMMENT_TEXT
FROM kyw0817.ENFORCEMENT as enf
LEFT JOIN  kyw0817.ENFORCEMENT_ACTION_CODE as eatc
ON eatc.TYPE_CODE = enf.ENFACTIONTYPE
LEFT JOIN  kyw0817.ENFORCEMENT_ACTION as ea
ON ea.PWSID = enf.PWSID AND ea.ENFORCEMENT_ID = enf.ENFID;

select * from KYW2.ENFORCEMENTS limit 10;
select count(PWSID) from KYW2.ENFORCEMENTS;


truncate KYW2.SOURCE_TREATMENTPLANT;
INSERT INTO KYW2.SOURCE_TREATMENTPLANT (PWSID, FACILITY_ID, FACILITY_NAME)
(
 select PWSID, FACILITY_ID, FACILITY_NAME 
 from kyw0817.WATER_SYSTEM_FACILITY 
 WHERE FACILITY_TYPE_CODE ='TP');
select * from KYW2.SOURCE_TREATMENTPLANT limit 10;
select count(ID) from KYW2.SOURCE_TREATMENTPLANT;


truncate KYW2.SOURCE_RESERVOIR;
INSERT INTO KYW2.SOURCE_RESERVOIR (PWSID, FACILITY_ID, FACILITY_NAME)
(select PWSID, FACILITY_ID, FACILITY_NAME from kyw0817.WATER_SYSTEM_FACILITY WHERE FACILITY_TYPE_CODE = 'IN');
select * from KYW2.SOURCE_RESERVOIR limit 10;
select count(ID) from KYW2.SOURCE_RESERVOIR;



truncate KYW2.WATER_SYSTEMS;
UPDATE  kyw0817.WATER_SYSTEM SET CITIES_SERVED = '0' WHERE CITIES_SERVED='Not Reported' limit 60000;
UPDATE  kyw0817.WATER_SYSTEM SET COUNTIES_SERVED = '0' WHERE COUNTIES_SERVED='Not Reported' limit 60000;
insert into KYW2.WATER_SYSTEMS (PWSID, PWS_NAME, STATE_CODE, CITY_NAME, COUNTY_NAME, ZIP_CODE, ORG_NAME, ORG_ADDRESS_LINE1, ORG_ADDRESS_LINE2, ORG_PHONE_NUMBER, ORG_URI, ORG_CCR_REPORT_URI, IS_SCHOOL,                OUTSTANDING_PERFORMER, SOURCE_PURCHASED_PWSID, WATER_SOURCE_TYPE)
select                          PWSID, PWS_NAME, STATE_CODE, CITY_NAME,"",           ZIP_CODE, ORG_NAME, ADDRESS_LINE1,     ADDRESS_LINE2,     PHONE_NUMBER,     url,     url,                IS_SCHOOL_OR_DAYCARE_IND, OUTSTANDING_PERFORMER, "",                     SOURCE_WATER_PROTECTION_CODE
from kyw0817.WATER_SYSTEM;
select * from KYW2.WATER_SYSTEMS limit 10;
select count(ID) from KYW2.WATER_SYSTEMS;


truncate KYW2.VIOLATIONS;
INSERT INTO KYW2.VIOLATIONS
	   (SEVERITY_IND_CNT,UNIT_OF_MEASURE,VIOLATION_CODE_EXPLAIN,IS_MAJOR_VIOL_IND,COMPLIANCE_STATUS_CODE,SDWIS_URI,RTC_ENFORCEMENT_ID,EPA_REGION,ENFORCEMENTS,VIOL_MEASURE,RTC_DATE,VIOLATION_CODE,PWS_TYPE_CODE,IS_HEALTH_BASED_IND,COMPL_PER_END_DATE,COMPL_PER_BEGIN_DATE,ORIGINATOR_CODE,PRIMARY_SOURCE_CODE,VIOLATION_CATEGORY_CODE,RULE_FAMILY_CODE,PRIMACY_AGENCY_CODE,FACILITY_ID,POP_CAT_5_CODE,RULE_CODE,STATE_MCL,NPM_CANDIDATE,POPULATION_SERVED_COUNT,LATEST_ENFORCEMENT_ID,PUBLIC_NOTIFICATION_TIER,CONTAMINANT_CODE_EXPLAIN,PWSID,RULE_GROUP_CODE,CONTAMINANT_CODE,VIOLATION_ID)
(SELECT SEVERITY_IND_CNT,UNIT_OF_MEASURE,VIOLATION_CODE_EXPLAIN,IS_MAJOR_VIOL_IND,COMPLIANCE_STATUS_CODE,SDWIS_URI,RTC_ENFORCEMENT_ID,EPA_REGION,0,VIOL_MEASURE,STR_TO_DATE(RTC_DATE, '%d-%b-%y'),VIOLATION_CODE,PWS_TYPE_CODE,IS_HEALTH_BASED_IND,STR_TO_DATE(COMPL_PER_END_DATE, '%d-%b-%y'),STR_TO_DATE(COMPL_PER_BEGIN_DATE, '%d-%b-%y'),ORIGINATOR_CODE,PRIMARY_SOURCE_CODE,VIOLATION_CATEGORY_CODE,RULE_FAMILY_CODE,PRIMACY_AGENCY_CODE,FACILITY_ID,POP_CAT_5_CODE,RULE_CODE,STATE_MCL,NPM_CANDIDATE,POPULATION_SERVED_COUNT,LATEST_ENFORCEMENT_ID,PUBLIC_NOTIFICATION_TIER,CONTAMINANT_CODE_EXPLAIN,PWSID,RULE_GROUP_CODE,CONTAMINANT_CODE,VIOLATION_ID
FROM kyw0817.VIOLATION);
select * from KYW2.VIOLATIONS limit 10;
select count(ID) from KYW2.VIOLATIONS;


truncate KYW2.TREATMENTS;
INSERT INTO KYW2.TREATMENTS (PWSID,   FACILITY_ID,   OBJECTIVE,                  OBJECTIVE_EXPLAIN,  TREATMENT,    COMMENTS,   TREATMENT_EXPLAIN, SDWIS_URI)    
select                      t.PWSID, t.FACILITY_ID, t.TREATMENT_OBJECTIVE_CODE, toc.OBJECTIVE,      t.TREATMENT_PROCESS_CODE,            t.COMMENTS_TEXT, tp.PROCESS ,         t.url
FROM kyw0817.TREATMENT as t
join kyw0817.TREATMENT_OBJECTIVE_CODE as toc
ON t.TREATMENT_OBJECTIVE_CODE=toc.CODE
join kyw0817.TREATMENT_PROCESS as tp
ON tp.CODE=t.TREATMENT_PROCESS_CODE;

select * from KYW2.TREATMENTS limit 10;
select count(ID) from KYW2.TREATMENTS;
*/
